#!/usr/bin/python3
import sys;
import random as rnd;
import pygame as pg;

from block import Block;

pg.init();

println = print;

def main(argc: int, argv: list):
  W = 800; H = 640;
  Display = pg.display.set_mode((W, H));
  pg.display.set_caption("Meinkraft");
  game_version = "Indev 0.24"

  font = pg.font.Font("./fonts/minecraft.ttf", 20);
  clock = pg.time.Clock();

  player = pg.Rect(0, 255, 25, 45);
  player_rot = 0;
  gravity = 0;

  TEXTURES = [None, (0xA3, 0xA3, 0xA3), (0x79, 0xEA, 0x18), (0xB4, 0x5E, 0x32)];

  world = [[[Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(2), Block(3), Block(3), Block(3), Block(1)], [Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(2), Block(3), Block(3), Block(3), Block(1)], [Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(2), Block(3), Block(3), Block(3), Block(1)], [Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(2), Block(3), Block(3), Block(3), Block(1)], [Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(2), Block(3), Block(3), Block(3), Block(1)], [Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(2), Block(3), Block(3), Block(3), Block(1)], [Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(2), Block(3), Block(3), Block(3), Block(1)], [Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(0), Block(2), Block(3), Block(3), Block(3), Block(1)]]];

  println("DEBUG: Game started");

  println("DEBUG: World generation started");

  noise_map = [16];
  for i in range(100):
    relief = rnd.randint(-1, 1);
    noise_map.append(noise_map[-1]+relief);

  println("DEBUG: World generation ended");

  while (True):
    for ev in pg.event.get():
      if (ev.type == pg.QUIT):
        return 1;
      elif (ev.type == pg.KEYDOWN):
        if (ev.key == pg.K_a):
          player_rot = -1;
        elif (ev.key == pg.K_d):
          player_rot = 1;
        elif (ev.key == pg.K_SPACE):
          gravity = -10;
      elif (ev.type == pg.KEYUP):
        if ((ev.key == pg.K_a) or (ev.key == pg.K_d)):
          player_rot = 0;
    player.x += player_rot * 4;
    player_x = round(player.x/25, 2);
    player_y = round(-(player.y/25-14), 2);
    Display.fill((0x6B, 0xCB, 0xEC));
    pg.draw.rect(Display, (0xFF, 0x00, 0x00), player);
    gen_x = 0;
    gen_y = 0;
    println(noise_map);
    for chunk in world:
      for block_line in chunk:
        for block in block_line:
          if (block.bid != 0):
            pg.draw.rect(Display, TEXTURES[block.bid], pg.Rect(gen_x*25, gen_y*25, 25, 25));
          gen_y += 1;
        gen_y = 0;
        gen_x += 1;
    if (player_y >= 1):
      player.y += gravity;
      gravity += 0.6;
    else:
      println("Ground touch");
      player.y -= 0.6;
    Display.blit(font.render(f"Meinkraft {game_version}", (0x00, 0x00, 0x00), False), (10, 10));
    Display.blit(font.render(f"X: {player_x}", (0x00, 0x00, 0x00), False), (10, 60));
    Display.blit(font.render(f"Y: {player_y}", (0x00, 0x00, 0x00), False), (10, 85));
    pg.display.update();
    clock.tick(60);
  return 0;

if (__name__ == "__main__"):
  exit(main(len(sys.argv), sys.argv));

